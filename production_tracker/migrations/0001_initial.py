# Generated by Django 4.2 on 2023-07-21 23:19

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('role', models.CharField(max_length=100)),
                ('access', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('job_id', models.AutoField(primary_key=True, serialize=False)),
                ('job_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='JobSite',
            fields=[
                ('job_site_id', models.AutoField(primary_key=True, serialize=False)),
                ('job_site_name', models.CharField(max_length=100)),
                ('job_site_location', models.CharField(max_length=100)),
                ('job_site_address', models.CharField(max_length=100)),
                ('job_site_city', models.CharField(max_length=100)),
                ('job_site_state', models.CharField(max_length=2)),
                ('job_site_zipcode', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Production',
            fields=[
                ('entry_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('entry_date', models.DateField()),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('task_id', models.AutoField(primary_key=True, serialize=False)),
                ('task_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('unit_id', models.AutoField(primary_key=True, serialize=False)),
                ('unit_name', models.CharField(max_length=100)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='production_tracker.job')),
            ],
        ),
        migrations.CreateModel(
            name='ProductionTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_time', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('production', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='production_tracker.production')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='production_tracker.task')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='production_tracker.unit')),
            ],
        ),
        migrations.AddField(
            model_name='production',
            name='tasks',
            field=models.ManyToManyField(through='production_tracker.ProductionTask', to='production_tracker.task'),
        ),
        migrations.AddField(
            model_name='production',
            name='units',
            field=models.ManyToManyField(through='production_tracker.ProductionTask', to='production_tracker.unit'),
        ),
        migrations.AddField(
            model_name='production',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='job',
            name='job_site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='production_tracker.jobsite'),
        ),
    ]
